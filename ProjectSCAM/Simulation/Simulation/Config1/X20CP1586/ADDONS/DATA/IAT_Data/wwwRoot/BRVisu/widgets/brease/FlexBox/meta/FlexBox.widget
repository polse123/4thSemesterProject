<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.FlexBox">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/ContainerWidget.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>brease/decorators/LanguageDependency.js</File>
				<File>brease/enum/Enum.js</File>
				<File>brease/core/Types.js</File>
				<File>brease/helper/Scroller.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/FlexBox/FlexBox.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Container</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Rahmen mit Label</Description>
			<Description name="de">Zeigt einen Rahmen um eine Gruppe von Widgets; optional mit einem Beschriftungstext</Description>
			<Description name="en">Defines a frame/area where FlexBox item are placed and can expand/shrink as confifured</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.FlexBox</Class>
			<Class level="1">brease.core.ContainerWidget</Class>
			<Class level="2">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
			<Child>widgets.brease.FlexBoxItem</Child>
		</Children>
		<Methods>
			<Method name="SetEnable">
				<Description>setter for binding of &apos;enable&apos;</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of &apos;enable&apos; (false = disabled, true = enabled)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetStyle">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible">
				<Description>Sets the visibility of the widget.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of visibility (false = hide, true = show)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0">
						<Description>id of widget that triggered this event&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;enable&apos;.&lt;br/&gt;
Fired when enabled state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;visible&apos;.&lt;br/&gt;
Fired when visible state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="alignment" type="brease.enum.Direction" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="vertical">
				<Description>Alignment of the FlexBoxItems
horizontal: elements aligned from left to right.
vertical: elements aligned from top to bottom.
				</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.
				</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles
				</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles
				</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type
				</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility
				</Description>
			</Property>
		</Properties>
	<BindingTemplates>
  
</BindingTemplates>
<PropertyGroups>
  <PropertyGroup name="Size" type="String" category="Layout">
    <Description>outer height and width of widget</Description>
  </PropertyGroup>
  <PropertyGroup name="Position" type="String" category="Layout">
    <Description>top and left of widget</Description>
  </PropertyGroup>
</PropertyGroups>
<StyleProperties defaultStyle="default">
  <StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.FlexBox" category="Layout" groupRefId="Size" groupOrder="1" default="200">
    <StyleElement attribute="@include elemWidth($value)"/>
    <Description>outer width of widget</Description>
  </StyleProperty>
  <StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.FlexBox" category="Layout" groupRefId="Size" groupOrder="2" default="150">
    <StyleElement attribute="@include elemHeight($value)"/>
    <Description>outer height of widget</Description>
  </StyleProperty>
  <StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
    <StyleElement attribute="@include elemTop($value)"/>
    <Description>absolute position measured from top boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
    <StyleElement attribute="@include elemLeft($value)"/>
    <Description>absolute position measured from left boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
    <StyleElement attribute="z-index"/>
    <Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;&#xD;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;&#xD;
        The zIndex must be unique within a content.&lt;br/&gt;</Description>
  </StyleProperty>
  <StyleProperty name="borderWidth" type="PixelValCollection" default="1px" category="Appearance">
    <StyleElement selector="" attribute="border-width"/>
    <StyleElement selector="> .header" attribute="border-width"/>
    <Description>Sets the width of the border of the widget. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="cornerRadius" category="Appearance" type="PixelValCollection" default="0px">
    <StyleElement attribute="@include border-radius($value)"/>
    <Description>Sets the radius of the widget rounded corners. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="backColor" category="Appearance" type="Color" default="transparent">
    <StyleElement attribute="background-color"/>
    <Description>Sets the background color of the group-box</Description>
  </StyleProperty>
  <StyleProperty name="backGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="> .container" attribute="background-image"/>
    <Description>Background as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#DFDFDF">
    <StyleElement attribute="border-color"/>
    <StyleElement selector="> .header" attribute="border-color"/>
    <Description>Sets the border color of the group-box. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="borderStyle" category="Appearance" type="BorderStyle" default="solid">
    <StyleElement selector="" attribute="border-style"/>
    <StyleElement selector="> .header" attribute="border-bottom-style"/>
    <Description>Style of the Border of the widget</Description>
  </StyleProperty>
  <StyleProperty name="opacity" category="Appearance" type="Opacity" default="1">
    <StyleElement attribute="opacity"/>
    <Description>Opacity of the widget</Description>
  </StyleProperty>
  <StyleProperty name="shadow" category="Appearance" type="Shadow" default="none">
    <StyleElement attribute="@include box-shadow($value)"/>
    <Description>Shadow of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="padding" category="Layout" type="Padding" default="10px">
    <StyleElement selector="> .container" attribute="padding"/>
    <Description>Padding of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="margin" category="Layout" type="Margin" default="0px">
    <StyleElement attribute="margin"/>
    <Description>Margin of the Widget</Description>
  </StyleProperty>
</StyleProperties>
</Widget>
</WidgetLibrary>
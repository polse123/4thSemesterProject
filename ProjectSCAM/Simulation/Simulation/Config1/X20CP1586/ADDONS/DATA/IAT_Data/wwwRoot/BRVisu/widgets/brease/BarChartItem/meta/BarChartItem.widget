<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.BarChartItem">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/BaseWidget.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>brease/datatype/Node.js</File>
				<File>brease/core/Utils.js</File>
				<File>brease/decorators/LanguageDependency.js</File>
				<File>brease/decorators/MeasurementSystemDependency.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/BarChartItem/BarChartItem.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Chart</Category>
			<Category name="Category">Container</Category>
		</Categories>
		<Descriptions>
			<Description name="short">BarChartItem zur Datenanbindung</Description>
			<Description name="de">Widget zur Datenanbindung für BarChart
Jedes BarChartItem representiert eine Säule			</Description>
			<Description name="en">Widget used for data connection to BarChart 
Each BarChartItem represents a bar			</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.BarChartItem</Class>
			<Class level="1">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>widgets.brease.BarChart</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="SetEnable">
				<Description>setter for binding of &apos;enable&apos;</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of &apos;enable&apos; (false = disabled, true = enabled)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetStyle">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetValue">
				<Description>Sets the value for the Bar</Description>
				<Arguments>
					<Argument name="value" type="Number" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible">
				<Description>Sets the visibility of the widget.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of visibility (false = hide, true = show)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0">
						<Description>id of widget that triggered this event&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;enable&apos;.&lt;br/&gt;
Fired when enabled state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;visible&apos;.&lt;br/&gt;
Fired when visible state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.
				</Description>
			</Property>
			<Property name="maxValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="100">
				<Description>Maximum value, used to define the limits of the Chart.
				</Description>
			</Property>
			<Property name="minValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="0">
				<Description>Minimun value, used to define the limits of the Chart.
				</Description>
			</Property>
			<Property name="node" type="brease.datatype.Node" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Value with unit for the bar.
				</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles
				</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles
				</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type
				</Description>
			</Property>
			<Property name="text" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="true" projectable="true" category="Appearance">
				<Description>Display text on the cardinal axis for the Bar.
				</Description>
			</Property>
			<Property name="value" type="Number" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" nodeRefId="node" category="Data" defaultValue="50">
				<Description>Value for the bar. The configured default value will be used if the property is not bound.
				</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility
				</Description>
			</Property>
		</Properties>
	<BindingTemplates>
  
</BindingTemplates>
<PropertyGroups>
  <PropertyGroup name="Size" type="String" category="Layout">
    <Description>outer height and width of widget</Description>
  </PropertyGroup>
  <PropertyGroup name="Position" type="String" category="Layout">
    <Description>top and left of widget</Description>
  </PropertyGroup>
</PropertyGroups>
<StyleProperties defaultStyle="default">
  <StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.BarChartItem" category="Layout" groupRefId="Size" groupOrder="1" hide="true">
    <StyleElement attribute="@include elemWidth($value)"/>
    <Description>outer width of the widget</Description>
  </StyleProperty>
  <StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.BarChartItem" category="Layout" groupRefId="Size" groupOrder="2" hide="true">
    <StyleElement attribute="@include elemHeight($value)"/>
    <Description>outer height of the widget</Description>
  </StyleProperty>
  <StyleProperty name="top" type="Integer" not_styleable="true" owner="widgets.brease.BarChartItem" category="Layout" groupRefId="Position" groupOrder="1" hide="true">
    <StyleElement attribute="@include elemTop($value)"/>
    <Description>absolute position measured from top boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="left" type="Integer" not_styleable="true" owner="widgets.brease.BarChartItem" category="Layout" groupRefId="Position" groupOrder="2" hide="true">
    <StyleElement attribute="@include elemLeft($value)"/>
    <Description>absolute position measured from left boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
    <StyleElement attribute="z-index"/>
    <Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;&#xD;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;&#xD;
        The zIndex must be unique within a content.&lt;br/&gt;</Description>
  </StyleProperty>
  <StyleProperty name="borderWidth" type="PixelValCollection" category="Appearance" default="2px">
    <StyleElement selector="rect.bar" attribute="@include SVGFactorBorder($value, 2)"/>
    <Description>Sets the width of the border. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="borderColor" type="ColorCollection" category="Appearance" default="#000000">
    <StyleElement selector="rect.bar" attribute="stroke"/>
    <Description>Sets the color of the border. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="backColor" type="Color" category="Appearance" default="#FF8800">
    <StyleElement selector="rect.bar" attribute="fill"/>
    <Description>Sets the color of the background. For further information, please check its type</Description>
  </StyleProperty>
  <StyleProperty name="textColor" type="Color" category="Appearance" default="#000000">
    <StyleElement selector="text" attribute="fill"/>
    <Description>Sets the height of the displayed value</Description>
  </StyleProperty>
  <StyleProperty name="fontSize" type="PixelVal" category="Font" default="12px">
    <StyleElement selector="text" attribute="font-size"/>
    <Description>Sets the height of the displayed value</Description>
  </StyleProperty>
  <StyleProperty name="fontName" type="FontName" category="Font" default="Arial">
    <StyleElement selector="text" attribute="font-family"/>
    <Description>Sets the font name of the displayed value</Description>
  </StyleProperty>
  <StyleProperty name="bold" type="Boolean" category="Font" default="false">
    <StyleElement selector="text" attribute="@include font-weight-bold($value)"/>
    <Description>Sets the bold property of the displayed value</Description>
  </StyleProperty>
  <StyleProperty name="italic" type="Boolean" category="Font" default="false">
    <StyleElement selector="text" attribute="@include font-style-italic($value)"/>
    <Description>Sets the italic property of the displayed value</Description>
  </StyleProperty>
  <StyleProperty name="opacity" type="Opacity" category="Appearance" default="1">
    <StyleElement attribute="opacity"/>
    <Description>Opacity of the widget</Description>
  </StyleProperty>
</StyleProperties>
</Widget>
</WidgetLibrary>